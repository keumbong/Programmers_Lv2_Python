//잘리는 패턴은 작은 사각형이 최대공약수만큼 반복됨
//작은 사각형의 가로와 세로는 각 각 최대공약수로 나눈 몫임.
//작은사각형의 빈공간은 가로/gcd + 세로/gcd -1 임
//(왜?) 선은 작은 사각형의 가로 or 세로 or 모서리를 지날 수 밖에없다.
// 세로만큼 빈타일은 각 높이마다 존재할 것이고, 각 높이마다 세로선을 지나는만큼 최대 두개 존재할 수 있다.
// 그런데 최대 두개 존재하는경우는 가로/gcd -1 개 존재하므로 총 빈타일의 개수는 가로/gcd + 세로/gcd -1 와 같다.
//따라서 식을 완성하면
// => (전체 타일 개수) - {(가로 / gcd) + (세로 / gcd) - 1} * gcd
// => (전체 타일 개수) - {(가로 + 세로) / gcd - 1 } * gcd
// => (가로 * 세로) - (가로 + 세로) - gcd

import math
def solution(w,h):
    whole = w * h
    broken = (w + h) - math.gcd(w,h)
    answer = whole - broken
    return answer